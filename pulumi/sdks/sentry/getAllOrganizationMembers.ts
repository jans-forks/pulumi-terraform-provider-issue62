// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAllOrganizationMembers(args: GetAllOrganizationMembersArgs, opts?: pulumi.InvokeOptions): Promise<GetAllOrganizationMembersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sentry:index/getAllOrganizationMembers:getAllOrganizationMembers", {
        "organization": args.organization,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAllOrganizationMembers.
 */
export interface GetAllOrganizationMembersArgs {
    organization: string;
}

/**
 * A collection of values returned by getAllOrganizationMembers.
 */
export interface GetAllOrganizationMembersResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly members: outputs.GetAllOrganizationMembersMember[];
    readonly organization: string;
}
export function getAllOrganizationMembersOutput(args: GetAllOrganizationMembersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAllOrganizationMembersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sentry:index/getAllOrganizationMembers:getAllOrganizationMembers", {
        "organization": args.organization,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAllOrganizationMembers.
 */
export interface GetAllOrganizationMembersOutputArgs {
    organization: pulumi.Input<string>;
}
